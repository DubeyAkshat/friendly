# .env.example

########################
# Common env variables #
########################

# Set to True during development, switch to False in production
DEBUG=False

# A secret key for Django applications. Replace 'your_secret_key_here' with a strong, unique key.
SECRET_KEY=<your_secret_key_here>
# You can use online tools or Djangoâ€™s django.core.management.utils.get_random_secret_key() method to generate a new key.
# Make sure to keep this key confidential and never share it publicly.

# Comma-separated values of allowed hosts. Add your production domain when deploying.
DJANGO_ALLOWED_HOSTS=django,localhost,127.0.0.1,0.0.0.0,[::1]


################################################
# PostgreSQL env variables for Dockerized setup #
################################################

# Username for the PostgreSQL server
POSTGRES_USER=<your_user_name>

# Password for the POSTGRES_USER. Choose a strong password.
POSTGRES_PASSWORD=<your_password>

# Host of the PostgreSQL server
# `postgres_db` is the docker-compose service which runs as the PostgresSQL server host
# Do not change this value if you intend to use the `postgres_db` docker-compose service
POSTGRES_HOST=postgres_db

# Name of your database 
POSTGRES_DB=<your_database_name>

# Port of the PostgreSQL server
# `postgres_db` service will use the port 5432. 
# Do not change this value if you intend to use the docker-compose `postgres_db` docker-compose service
POSTGRES_PORT=5432


############################################
# PostgreSQL env varialbe for Manaul setup #
############################################

# Database URL for manual setup
DATABASE_URL=postgres://<user>:<password>@<host>:<port>/<database>
# Replace <user>, <password>, <host>, <port> & <database> with the actual values in the URL


########################################
# Nginx host port for dockerized setup #
########################################

# Set Port for Nginx server in the host machine to map with the container
NGINX_HOST_PORT=80
